h1. oui_player

h2. Introduction

An extendable plugin to easily embed customized audio and video players.

p(alert-block information). %(ui-icon ui-icon-info).% This plugin does not use oembed, it builds iframe embedding codes and HTML5 players by its own without any external request for better performances.

h3. Supported extensions

As known at the last plugin release…

* "Abc News":http://abcnews.go.com/video: "oui_abcnews":https://github.com/NicolasGraph/oui_abcnews;
* "Archive":https://archive.org/: "oui_archive":https://github.com/NicolasGraph/oui_archive;
* "Bandcamp":https://bandcamp.com/: "oui_bandcamp":https://github.com/NicolasGraph/oui_bandcamp;
* "Coub":https://coub.com/: "oui_coub":https://github.com/NicolasGraph/oui_coub;
* "Dailymotion":http://www.dailymotion.com/: "oui_dailymotion":https://github.com/NicolasGraph/oui_dailymotion;
* "Giphy":https://giphy.com/: "oui_giphy":https://github.com/NicolasGraph/oui_giphy;
* "HTML5 audio":https://developer.mozilla.org/docs/Web/HTML/Element/audio: "oui_audio":https://github.com/NicolasGraph/oui_audio;
* "HTML5 video":https://developer.mozilla.org/docs/Web/HTML/Element/video: "oui_video":https://github.com/NicolasGraph/oui_video;
* "Mixcloud":https://www.mixcloud.com/: "oui_mixcloud":https://github.com/NicolasGraph/oui_mixcloud;
* "Myspace videos":https://myspace.com/myspace/videos: "oui_myspace":https://github.com/NicolasGraph/oui_myspace;
* "Soundcloud":https://soundcloud.com/: "oui_soundcloud":https://github.com/NicolasGraph/oui_soundcloud;
* "Spotify":https://www.spotify.com/: "oui_spotify":https://github.com/NicolasGraph/oui_spotify;
* "Ted":https://www.ted.com/: "oui_ted":https://github.com/NicolasGraph/oui_ted;
* "Twitch":https://www.twitch.tv/: "oui_twitch":https://github.com/NicolasGraph/oui_twitch;
* "Viddsee":https://www.viddsee.com/: "oui_viddsee":https://github.com/NicolasGraph/oui_viddsee;
* "Vimeo":http://www.vimeo.com/: "oui_vimeo":https://github.com/NicolasGraph/oui_vimeo;
* "Youtube":https://www.youtube.com/: "oui_youtube":https://github.com/NicolasGraph/oui_youtube.

h3. Plugin requirements

oui_player's minimum requirements:

* "Textpattern CMS":http://textpattern.com/ 4.6+;
* "oui_provider":https://github.com/NicolasGraph/oui_provider v1+;
* Any of the above provider related extension.

h2. Plugin management

h3. Installation

h4. From the admin interface

Follow the below instructions before or after installing the wanted oui_player extensions:

# "Download":https://github.com/NicolasGraph/oui_player/releases the @.txt@ or @_zip.txt@ compiled plugin file;
# Upload its contents through the _Admin > Plugins_ tab;
# Confirm the plugin install on the preview page.
# Enable the plugin *and* click the _Options_ link to set the plugin preferences.

h4. Via Composer (not available yet)

After "installing Composer":https://getcomposer.org/doc/00-intro.md…

# Target your project directory:
@$ cd /path/to/your/textpattern/installation/dir@
# If it's not already done, lock your version of Txp:
@$ composer require textpattern/lock:4.6.2@, where @4.6.2@ is the Txp version in use.
# Install oui_player:
@$ composer require nicolasgraph/oui_player@
# Connect to the Txp admin interface and click _Options_ or visit your _Admin > Preferences_ tab to fill the plugin prefs.

h3. Update

h4. From the admin interface

Follow the install instructions.
If you are updating from v1.*, be sure to install all wanted extensions before to visit the _Admin > Preferences_ tab to keep your preference values untouched.

h4. Via Composer (not available yet)

bc. $ composer update nicolasgraph/oui_player

h3. Uninstall

h4. From the admin interface

# In the _Admin > Plugins_ tab, check the box on the left of the plugin related row.
# Under the plugins list, select the the _Delete_ option.
# confirm the deletion.

h4. Via Composer (not available yet)

bc. $ composer remove nicolasgraph/oui_player

h2. Preferences/options

Plugin prefs can be set under the _Admin > Preferences_ tab and are mainly used as default values for the @<txp:oui_player />@ tag attributes.

h3. Global prefs

- @Field used by default@ :=
Defines a field to use as the default @play@ attribute value.
%(warning)The provided fieldname must be different than any value entered in it; avoid digits if you use ID's as @play@ attribute values%
*Default:* @article_image@
*valid:* @article_image@ or any existing custom field =:
- @Favourite provider@ :=
Set the default @provider@ attribute value.
*Default:* the first plugged provider
*valid:* Any plugged provider in the select list =:
- @Display the provider player preferences@ :=
Displays the defined provider prefs as a goup of prefs.
*Default:* yes
*valid:* yes or no =:

h3. Providers prefs

While %(information)some player parameters, related to the item to play, should be used through attributes% (e.g. the Youtube @start@ parameter which defines the second where to start playing the video), %(information)these used as global settings should preferrably be set through the plugin preferences% to %(warning)avoid a massive use of tag attributes%.

Of course, it is still possible to override a plugin pref value via an attribute when needed.

h2. Tags

h3. oui_player

Embeds a player.

bc(language-markup). <txp:oui_player />

h4. Presentational attributes

- @label@ :=
String; empty by default.
Label for the video. =:
- @labeltag@ :=
HTML container tag name; empty by default.
HTML wraptag for the label, without brackets. =:
- @wraptag@ :=
HTML container tag name; empty by default.
HTML tag to be used as the content wraptag, without brackets. =:
- @class@ :=
String; empty by default.
CSS class for HTML content wraptag. =:
- @responsive@ :=
@true@ or @false@, related preference value used by default.
Adapts the final player size from provided width and/or height and/or ratio values to fit the container width.
Wraps the player and adds some styles. =:

h4. Main tag attributes

Most of the following attributes can be set via the _Preferences_ tab; +always prefer plugin "global" prefs to tag related attributes!+

- @play@ :=
Valid values differs from one provider to another, check each extension.
The item to play; *required if* it does not use the value of the custom field selected in the plugin prefs (See each provider to know the valid values).
*default:* %(information)changed v1.2.0% the @play@ attribute value of an eventual @<txp:oui_if_play></txp:oui_if_play>@ container tag, or the custom field value of the one selected in the plugin prefs. =:
- @provider@ :=
Extension related provider name; uses the related preference value by default.
The provider to use; *required if* the @play@ attribute is an id, *recommended anyways* if known as it increases the plugin performances by skipping the provider guess. =:

h4. Providers related tag attributes

See each provider related extension.

h3. oui_if_player

Checks the @play@ attribute value againsts defined URL schemes.

bc(language-markup). <txp:oui_if_player>
[…]
</txp:oui_if_player>

h4. Attributes

- @play@ :=
The custom field value of the one selected in the plugin prefs by default.
The item to play; *required if* it does not use the value of the custom field selected in the plugin prefs (See each provider to know the valid values). =:
- @provider@ :=
Extension related provider name; empty by default.
Check the URL against valid URL schemes of the defined provider. =:

h2. Examples

h3. Display a player from the default values collected via plugin prefs

bc(language-markup). <txp:oui_player />

h3. Display a player from a manually filled URL

bc(language-markup). <txp:oui_player play="https://vimeo.com/155020267" />

…or, maybe a bit faster…

bc(language-markup). <txp:oui_player provider="vimeo" play="https://vimeo.com/155020267" />

h3. Display a player from manually filled ID

Using the favourite provider set in the prefs.

bc(language-markup). <txp:oui_player play="x4l8awd" />

…or, in conjonction with the @provider@ attribute…

bc(language-markup). <txp:oui_player provider="dailymotion" play="x4l8awd" />

h3. Display a player only if its URL is recognized as a provider URL scheme

With the default values collected via plugin prefs…

bc(language-markup).. <txp:oui_if_player>
    <txp:oui_player />
</txp:oui_if_player>

p. …or, with a manually filled URL…

bc(language-markup).. <txp:oui_if_player play="https://vimeo.com/155020267">
    <txp:oui_player />
</txp:oui_if_player>

p. You can also add the provider attribute to check the URL against URL schemes of a defined provider.

h2. Credits

h3. Author

"Nicolas Morand":https://twitter.com/NicolasGraph
_Thank you to the Textpattern community and the core team._

h3. License

This plugin is distributed under "GPL v2.0":https://www.gnu.org/licenses/gpl-2.0.txt.

oui_player version 2.0.0-BETA3, Copyright (C) 2018 Nicolas Morand
This Textpattern plugin comes with ABSOLUTELY "NO WARRANTY":https://www.gnu.org/licenses/gpl-2.0.html#section11.
This is free software, and you are welcome to redistribute it "under certain conditions":https://www.gnu.org/licenses/gpl-2.0.html#SEC3.

h3. Changelog

* *v2.0.0-BETA3* (2018-08-15)
** Added: admin side player preview;
** Changed: excerpt field no longer supported;
** Added: responsive embedding;
*** changed: providers related preferences displayed by default;
** changed: code rework:
*** providers now work as pluggable extensions:
**** Extension base (required): "oui_provider":https://github.com/NicolasGraph/oui_provider; any plugin extending the @\Oui\Provider@ class in an author prefix related namespace will be plugged into _oui_player_;
**** ABC News: "oui_abcnews":https://github.com/NicolasGraph/oui_abcnews;
**** Archive: "oui_archive":https://github.com/NicolasGraph/oui_archive;
**** Bandcamp: "oui_bandcamp":https://github.com/NicolasGraph/oui_bandcamp;
**** Dailymotion: "oui_bandcamp":https://github.com/NicolasGraph/oui_dailymotion;
**** Giphy: "oui_giphy":https://github.com/NicolasGraph/oui_giphy (new);
**** Mixcloud: "oui_mixcloud":https://github.com/NicolasGraph/oui_mixcloud;
**** MySpace: "oui_myspace":https://github.com/NicolasGraph/oui_myspace;
**** HTML5 audio: "oui_audio":https://github.com/NicolasGraph/oui_audio;
**** HTML5 video: "oui_video":https://github.com/NicolasGraph/oui_video;
**** Soundcloud: "oui_soundcloud":https://github.com/NicolasGraph/oui_soundcloud;
**** Twitch: "oui_twitch":https://github.com/NicolasGraph/oui_twitch;
**** Viddsee: "oui_viddsee":https://github.com/NicolasGraph/oui_viddsee;
**** Vimeo: "oui_vimeo":https://github.com/NicolasGraph/oui_vimeo;
**** Vine: "oui_vine":https://github.com/NicolasGraph/oui_vine;
**** Youtube: "oui_youtube":https://github.com/NicolasGraph/oui_youtube;
*** author prefix related namespace;
*** new class names (@Admin@ => @PlayerAdmin@, @Main@ => @Player@, @Player@ => @PlayerBase@);
*** tags now registered with related callback methods from the @Player@ class;
*** providers stored with their plugin author related prefix/namespace.
*** instances created/get via @Txp::get()@.
* *v1.3.1* (2017-07-13)
* *v1.3.0* (2017-05-24)
** Adds "Composer":https://getcomposer.org/ support for "textpattern/installer":https://packagist.org/packages/textpattern/installer;
** fixes multiple players prefs display and improves perfs;
** improves scripts embedding;
** added: Youtube player parameters @enablejsapi@ and @origin@;
** added: Dailymotion player parameters @api@ and @origin@;
** added: Vimeo player parameter @api@ and removes @badge@;
** added: support for:
*** "Bandcamp":https://bandcamp.com/;
*** HTML5 "audio":https://developer.mozilla.org/fr/docs/Web/HTML/Element/Audio + "video":https://developer.mozilla.org/fr/docs/Web/HTML/Element/Video;
* *v1.2.1* (2017-01-16)
** Fixed: Fixes the _Field used by default_ pref display when no custom field exists;
** fixed: fixes Textpack typo;
** changed: compiled code lightened by removing duplicated license related comments;
* *v1.2.0* (2016-12-12)
** added: sets the custom field plugin pref as the defaut value of the conditional tag @play@ attribute;
** added: introduces a @play@ attribute value inheritance in a conditional/container tag context;
** added: support for:
*** "Twitch channels":https://www.twitch.tv/,
*** "Vine":https://vine.co/;
** changed: improves PHP classes and methods use (see _For developers_).
* *oui_player v1.1.0* (2016-10-14)
** changed: plugin/tag names;
** removed: Txp 4.5 support;
** changed: consistency between attribute and player parameter names increased;
** changed: code rework to be easily extendable;
** added: support for:
*** "Abc News":http://abcnews.go.com/video,
*** "Archive":https://archive.org/,
*** "Mixcloud":https://www.mixcloud.com/,
*** "Myspace videos":https://myspace.com/myspace/videos,
*** "Soundcloud":https://soundcloud.com/,
*** "Twitch":https://www.twitch.tv/,
*** "Viddsee":https://www.viddsee.com/;
** (changed) Help file styling improvements.
* *oui_video v0.1.0* (2016-09-13)
* *oui_dailymotion v1.3.1* (2016-02-25) inspired by "arc_youtube":http://andy-carter.com/txp/arc_youtube and "arc_vimeo":http://andy-carter.com/txp/arc_vimeo by "Andy Carter":http://andy-carter.com.
